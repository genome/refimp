package TenxTestEnv;

use strict;
use warnings 'FATAL';

use Path::Class;

my ($repo_path, $test_data_directory);
sub repo_path { $repo_path }
sub test_data_directory { $test_data_directory }

INIT { # runs after compilation, right before execution

    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_DBI_NO_COMMIT} = 1;

    $repo_path = dir(__FILE__)->absolute->parent->parent;
    $test_data_directory = $repo_path->subdir('t', 'data');
    my $lib = $repo_path->subdir('lib');
    print "$lib\n";
    eval "use lib '$lib';";
    die "FATAL: $@" if $@;

    eval 'use Tenx';
    die "FATAL: $@" if $@;

sub test_data_directory { repo_path()->subdir('t', 'data') }

    Tenx::Config::set('ds_prod', 'Tenx::DataSource::TestDb');
    Tenx::Config::set('ds_testdb_server', $test_data_directory->subdir('test.db'));
    Tenx::Config::set('environment', 'test');

}


sub test_data_directory_for_class {
    my $class = shift;
    die 'No class given to test_data_directory_for_class!' if not $class;
    test_data_directory()->subdir( join('-', split('::', $class)) );
}

1;
