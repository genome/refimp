PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE clones(
        chr_chromosome VARCHAR2(8),
        clo_id NUMBER(15),
        clone_date_received DATE,
        clone_extension VARCHAR2(4),
        clone_name VARCHAR2(64) NOT NULL,
        clone_size VARCHAR2(16),
        clopre_clone_prefix VARCHAR2(16),
        cs_clone_status VARCHAR2(64),
        ct_clone_type VARCHAR2(25),
        gap VARCHAR2(2),
        map_location VARCHAR2(64),
        map_order VARCHAR2(64),
        CONSTRAINT clones_pk PRIMARY KEY(clo_id)
);
CREATE TABLE gb_accessions (
        acc_number VARCHAR2(16),
        center VARCHAR2(30),
        project_project_id NUMBER(10),
        rank NUMBER(1),
        version NUMBER(2),
        CONSTRAINT gb_accessions_pk PRIMARY KEY(acc_number),
        CONSTRAINT gb_accessions_project_fk FOREIGN KEY(project_project_id) REFERENCES project(project_id)
);
CREATE TABLE gsc_users(
        active_work_function_id NUMBER(10),
        bs_barcode VARCHAR2(16),
        creation_event_id NUMBER(10),
        default_work_function_id NUMBER(10),
        email VARCHAR2(64),
        first_name VARCHAR2(32),
        gra_grade VARCHAR2(4),
        gu_id NUMBER(10),
        hire_date DATE,
        initials VARCHAR2(4),
        last_name VARCHAR2(32),
        middle_name VARCHAR2(20),
        termination_date DATE,
        unix_login VARCHAR2(16),
        us_user_status VARCHAR2(16),
        user_comment VARCHAR2(140),
        CONSTRAINT gsc_users_pk PRIMARY KEY(gu_id)
);
CREATE TABLE project_finishers(
        project_project_id NUMBER(10),
        ei_ei_id NUMBER(10),
        CONSTRAINT project_finishers_project_fk FOREIGN KEY(project_project_id) REFERENCES project(project_id)
);
CREATE TABLE project_prefinishers(
        project_project_id NUMBER(10),
        ei_ei_id NUMBER(10),
        CONSTRAINT project_prefinishers_project_fk FOREIGN KEY(project_project_id) REFERENCES project(project_id)
);
CREATE TABLE project_savers(
        project_project_id NUMBER(10),
        ei_ei_id NUMBER(10),
        CONSTRAINT project_savers_project_fk FOREIGN KEY(project_project_id) REFERENCES project(project_id)
);
CREATE TABLE project_status_histories (
	project_project_id NUMBER(10),
	ps_project_status VARCHAR2(22),
	status_date DATE,
	CONSTRAINT psh_project_fk FOREIGN KEY(project_project_id) REFERENCES project(project_id)
);
CREATE TABLE projects (
        aprox_coverage NUMBER,
        archival_date DATE,
        consensus_directory VARCHAR2(150),
        date_last_assembled DATE,
        estimated_size NUMBER,
        estimated_size_from_ctgs NUMBER(8),
        gro_group_name VARCHAR2(64),
        name VARCHAR2(64),
        no_assemble_traces NUMBER,
        no_contigs NUMBER,
        no_ct_gt_1kb NUMBER,
        no_q20_bases NUMBER,
        pp_purpose VARCHAR2(32),
        priority NUMBER(1),
        project_id NUMBER(10),
        prosta_project_status VARCHAR2(22),
        spanned_gap NUMBER(10),
        spanned_gsc_gap NUMBER(10),
        target NUMBER(5),
        CONSTRAINT projects_pk PRIMARY KEY(project_id)
);
CREATE TABLE user_function(
        creation_event_id NUMBER(10),
        ei_id NUMBER(10),
        function_id NUMBER(10),
        gu_id NUMBER(10),
        status VARCHAR2(16),
	CONSTRAINT gsc_user_function_pk PRIMARY KEY (ei_id),
	CONSTRAINT gsc_user_function_pk FOREIGN KEY(gu_id) REFERENCES gsc_user(gu_id)
);
CREATE TABLE work_function (
	creation_event_id NUMBER(10),
	description VARCHAR2(256),
	function_id NUMBER(10),
	name VARCHAR2(100) NOT NULL,
	permission VARCHAR2(16),
	status VARCHAR2(8),
	type VARCHAR2(32),
	CONSTRAINT work_function_pk PRIMARY KEY(function_id)
);
COMMIT;
